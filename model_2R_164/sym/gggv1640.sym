//==========================================================================
//  G-Cubed Core Model
//
//  Main definitions of sets, variables, parameters and equations.
// update 161
//
// incorporate forward looking money rules	with weight mrule_f
//
// update 152
// new variiables added for differetn definiiation for nominal growth in the money rule
//
// update 151
// adjustment of import prices so PRIM exludes tariffs
//
//  update 150
// wage of v=government employees fixed in real terms
//
// update 149
//  syncronisation of all G-Cubed versions
//
//  update 148
//	IMQT edflatedby PRID insted of PRIM to ensure TBAL is in te correct units
//
//
//  update 147
//	PRIM redefined to be net of tariff import price index
//
//  update 146
//	GDPR redefined to net out tariff revenue from the value ofimports
//
//	update 145
//  all model versions synchronized and data updated
//
//  update 144
//
//  PMR replaced PMQ in   IMQT
//
//  update  143
//  data updates
//
//  update 142
//  modprod now starts in 2010 because initial productrivity gaps are from actaul data in 2010.

//
//  update 141
//
//  sector specific share of forward and backward looking firms
 //
//  Update 140
//  Price defaltor for imports change to deflate by	PRIM
//  new equations for IMQT; PRIM; GDPR; PGDP; 
//

//  Update 137
//	lower elasticity of subsitution in output level in Gas utilities and
//	gas extraction
//
//  Update 136
//Swap percentage BTA for unit tax version BCT
// lower coal substitution elasticities
// new US IO table without coal into coal
//
//  Update 135
//     Add full-dimensioned BTA variable
//
//  Update 134tc
//  Data for Austalia refined for 2014-2016
//
//  Update 133tc
//  reduce potential growth to 1.4% from 1.8%
//  reduce real interest rate r0 to 3.6% ; rate of time pref stays at 2.2%
//
//  Update v132tc
//     Replace TCAR with two variables, TCP and TCAX, to work around 
//     linearization issues.  TCP is a shock to price equations that is 
//     a nonlinear function of the real carbon tax and must be computed
//     outside the model.  TCAX is the real carbon tax itself (same as
//     previous use of TCAX) but it is now only used in revenue 
//     calculations.
//
// update v131
// new data GTAP9, OECDEO98, UN trade 15, energy 15
// baseyear for calibration 2011
// forecast year 2016
//
// update v130
//	carbon coeeficients redefned to be CO2 coefficients
//
// update v129a
// replacing TCAI and TCEX with TCAR and -TCAR
// TCAR dimensionaility changed to (goods,regions)
//
// update v129
// implention of a new capital controls targeting regime through targeting of the
// real exchange rate relative to the US (initially just China).

// update2 v125 - v128 experiments on data revisions
//
// update v124
// data revisions based on Larry's complete data update 7/7/15 -
// most changes in developing country aggregations
//
// update v123
// major update incorporating a series of updates from version 115 including
// - data revisions
// - parameter revisions
// - sectoral adjustment costs of capital changed from 4 to:
//		=1 for crude oil extraction
//		=1 for gas extraction
//		=15 for mining
// - d/f substitution change from
//		0.5 to 1.5 for petroleum refining
//		0.5 to 1.5 for crude oil
//		0.2 to 1.5 for gas extraction
//		2.0 to 0.9 for non-durable manufaturing
//	- sigma_o changed
//		1.0014 to 0.5 for mining
//		0.5 to 1.0044 for non-durable manufacturing
//  - sigma_e changed
//		0.2 to	 0.8 			for electric utilities
//		0.5 to	 0.9325 		for gas utilities
//		0.5 to	 1.1474			for mining
//		0.5 to	 0.670909311 	for agriculture
//		0.5 to	 0.8045   		for durable manufacturing
//		0.5 to	 1.0 			for non-durable manufacturing
//	- sigma_m changed	
//		1.0 to 	 2.7654 		for mining
//		1.0 to 	 2.36149 		for services
//	- sigma_oR for the US changed from 1.0 to 1.1 which is the same as other countries	
//	- mrule_ex change to -10 from 0 for China and -0.1 for LDC and EEB	
//		
//		
// - SHEF redefined as sector by region to accommodate Yiyong iterator
// - SHK added for sector by region capital efficiency shock
// - SHY redefined to sector by region rathern than region by sector
// - SHSR defined as increase in sectoral input demand
//	update v115
//    EXNA, IMNA and TBNA dropped to areduce definitiations of trade variables
//
// update v114a
//	  PBAL defined in own GDP a new variable PBAG added to the govt
//    budget constraint so payment to foreigners through PBAL can come from governments
//	  PBAL=PBAG or from the private sector PBAG=0 (default assumption)
// update: v114
//       with sector specific adjustment costs and increase in adjustmet cost for mining from 4 to 15
//		iceberg transaction costs in trade
//  Update: v113
//     Reintroduce the changes to the money rule and IMPX from v110.
//
//  Update: v112
//     Reintroduce the PRID change to match the version of the 
//     model used in the first draft of the fiscal paper (which had 
//     GOVT and the PRID change).
//
//  Update: v111
//     Support disaggregation of the electric sector by splitting
//     goods into more classes to handle the fact that generation
//     is not traded, just total electricity.
//
//     Remove the changes from v110 and the PRID change from v109
//     to facilitate comparison with the model used in the original 
//     version of the CES paper (which had GOVT but not the change
//     to PRID).
//
//  Update: v110
//     New monetary rule with the actual policy rate (INTN) adjusting 
//     gradually towards a desired policy rate (INPN). 
//
//     New variable IMPX added to each equation for IMP to allow an 
//     exogenous switch of imports by country i towards country j 
//     away from country k. If used the total of IMP shocks for a 
//     country MUST sum to zero.
//
//  Update: v109
//		GOVT added as the sum of both GCET+GOVL*exp(WAGE-PRID)
//		PRID defined to be the sum of PRP rather than PRD to avoid
//		problem with carbon tax accounting
//
//
//  Update: v108
//     Increment version number to reflect the difference between
//     Warwick's original v107, which did not include the change in
//     v102 and had invert set to 1 instead of 0.
//
//  Update: v107
//     Crude oil and gas separated as in v101-A.  Total profit PRFT
//     defined so revenue can be passed through the nonlinear algorithm
//     if needed.
//
//  Update: v106
//	    Taxes not dropped from IO tables in data build.
//
//  Update: v105
//     New notation with LDC replaced by ROW, rest of OECD replaced
//	    by rest of advanced economies.
//
//  Update: v103-v104
//     Warwick's internal revisions associated with updating of the
//     data programs.
//
//  Update: v102
//     Adjustment to TCAX and TCAR so that the real tax, TCAX (usually
//     entered as shock) is converted to a nominal tax, TCAR, before
//     it enters the PRD equations.
//
//  Update: v101-B
//     Due to problems with the Japanese IO table, the changes from
//     v101-A were not used and the split was reimplemented in v107.
//     However, for a time there were parallel versions of the model
//     with and without the split of oil and gas.  During that period,
//     the emissions coefficients on the old sectoral split were
//     changed as described below.  Since v101-A was never used,
//     the main development branch became v101-B.
//
//     No changes in the code or data but major refinements to the
//     way emission coefficients are calculated in Setparsym2.ox.
//     The coefficient on crude oil and gas extraction (5) was
//     replaced with separate coeefficients on gas utilities (2)
//     and petroleum refining (3).
//
//  Update: v101-A
//     Increment version number due to split of crude oil and gas into
//     two separate sectors.  The old sector 5 becomes crude oil (5) and
//     natural gas extraction (6).  Mining becomes sector 7, Agriculture
//     becomes sector 8, and Forestry is merged into Agriculture and
//     Wood Products during data construction.
//
//  Update: v100
//     Compute emissions from OUY-EXQ instead of OUG+IMQ-EXQ.  Using
//     OUY is consistent with measuring emissions at the individual
//     input level.  Using OUG+IMQ is not because OUY is not equal to
//     OUG+IMQ (since OUY is an Armington function of OUG and IMQ).
//
//  Update: v99
//     No changes in the code or data but major refinements to the
//     baseline via productivity projections in cycle.  Increment
//     the version number for clarity.
//
//  Update: v98
//     Revise input-output data to eliminate GTAP's very large flow of
//     coal into the US sector G-Cubed uses for refined petroleum.  W
//     Without the change, there was a large flow of coal into refining
//     and an accompanying flow of refined products into electricity
//     which is inconsistent with actual US IO tables.  Now the coal
//     goes straight to electricity.
//
//  Update: v97
//     Integrate v95 code that allows TAXE to incorporate nonlinear
//     effects by computing it outside the model and then inserting
//     it exogenously.  The original and new versions can be switched
//     via an optional module.
//
//  Update: v96
//     Merge in TITCH changes from version 92.1.  Note that v95 is
//     a separate branch with other changes and will need to be merged
//     in later in v97.
//
//  Update: v94
//     Create new price PRS, which is the pre-tax version of PRY,
//     in preparation for sector-specific unit taxes.  Use it to
//     simplify equations where PRY/(1+TAX) used to appear.  Segregate
//     equations where sector-specific taxes appear to allow variants
//     with and without them.  Also, expand TITC to differ by sector.
//
//  Update: April 7, 2010
//     new baseyear 2006
//     GTAP v7 data
//     new country definitions for Europe and Russia
//     parameter eufor weighting european countries in some versions
//
//  Updated July 2008
//     sector specific aeei
//     aeei in consumption
//     new labgrow = 1.5%
//     new time preference = 2.5%
//     yield curve risk premium RISR added
//     total stock market value
//
//  Variable types:
//     end = normal endogenous
//     ets = endogenous with lead
//     cos = costate
//     stl = state with lags
//     sta = state
//     exo = exogenous
//
//  Variable units:
//     pct      = log (% in gauss)
//     del      = level (D in gauss)
//     gdp      = normalized by gdp (%GDP in gauss)
//     usgdp    = normalized by US gdp (%USGDP in gauss)
//     cent     = cents per unit (c/unit in gauss)
//     btu      = quadrillion btu
//     mmt      = million metric tons
//     btugdp   = btu normailzed by GDP
//     mmtgdp   = million metric tons normalized by GDP
//     btuusgdp = btu normalized by US GDP
//     mmtusgdp = million metric tons normalized by US GDP
//
//  Equation types:
//
//     miss = steady state equations for state and costate variables.
//            only used by the oxnewton module
//
//==========================================================================

//
//  Sets
//

set time      (t0,t1,t2,t3,t4,t5,t6,t7,t8,t9)         'tablo time periods' ;
set last      = time(t9)                                    'steady state' ;

//
//  Now build standard subsets and set aliases
//

set dest      = regions                                'alias for regions' ;
set orig      = regions                                'alias for regions' ;
set currency  = regions                               'currency of assets' ;
set owner     = regions                             'owner of assets ASSE' ;
set abroad    = regions                       'used in asset calculations' ;

set factors   (K,L,E,M)                   'top tier factors of production' ;
set varfac    = factors - (K)                           'variable factors' ;

set domfor    (D,F)                                  'domestic vs foreign' ;


//==========================================================================
//
//  Parameters
//
//==========================================================================

parameter timepref(regions)                 'time preference rate'         ;
parameter labgrow(regions)                  'growth of effective labor'    ;
parameter transgdp(regions)                 'transfers per unit of GDP'    ;

//  --- production technology

parameter sigma_o(sectors,regions)          'subs elast, KLEM tier'        ;
parameter sigma_e(sectors,regions)          'subs elast, E tier'           ;
parameter sigma_m(sectors,regions)          'subs elast, M tier'           ;

parameter cd_o(sectors,regions)             '1 if cd, 0 if ces'            ;
parameter cd_e(sectors,regions)             '1 if cd, 0 if ces'            ;
parameter cd_m(sectors,regions)             '1 if cd, 0 if ces'            ;

parameter delta_o(factors,sec_std,regions)  'input weights, KLEM tier'     ;
parameter delta_e(regions,sec_std,goods_e)  'input weights, individ goods' ;
parameter delta_m(regions,sec_std,goods_m)  'input weights, individ goods' ;

//  --- household demands

parameter sigma_oH(regions)                 'subs elast, KLEM tier'        ;
parameter sigma_eH(regions)                 'subs elast, E tier'           ;
parameter sigma_mH(regions)                 'subs elast, M tier'           ;

parameter cd_oH(regions)                    '1 if cd, 0 if ces'            ;
parameter cd_eH(regions)                    '1 if cd, 0 if ces'            ;
parameter cd_mH(regions)                    '1 if cd, 0 if ces'            ;

parameter delta_oH(factors,regions)         'input weights, KLEM tier'     ;
parameter delta_eH(goods_e,regions)         'input weights, individ goods' ;
parameter delta_mH(goods_m,regions)         'input weights, individ goods' ;

//  --- raw capital sector demands

parameter sigma_oR(regions)                 'subs elast, KLEM tier'        ;
parameter sigma_eR(regions)                 'subs elast, E tier'           ;
parameter sigma_mR(regions)                 'subs elast, M tier'           ;

parameter cd_oR(regions)                    '1 if cd, 0 if ces'            ;
parameter cd_eR(regions)                    '1 if cd, 0 if ces'            ;
parameter cd_mR(regions)                    '1 if cd, 0 if ces'            ;

parameter delta_oR(factors,regions)         'input weights, KLEM tier'     ;
parameter delta_eR(goods_e,regions)         'input weights, individ goods' ;
parameter delta_mR(goods_m,regions)         'input weights, individ goods' ;

//  --- government demands

parameter delta_oG(factors,regions)         'gov KLEM budget shares'       ;
parameter delta_eG(goods_e,regions)         'gov budget shares on E goods' ;
parameter delta_mG(goods_m,regions)         'gov budget shares on M goods' ;

//  --- investment and capital accumulation

parameter phi(sec_std,regions)              'adjustment cost parameter std sector'    ;
parameter phi_y(regions)                    'adjustment cost parameter capital sector'    ;
parameter phi_z(regions)                    'adjustment cost parameter household capital'    ;
parameter adapt(regions)                    'rate of closure TOB-TPA gap'  ;
parameter delta(regions)                    'depreciation rate'            ;

parameter forei(sec_std,regions)          'shr of I driven by foresight std sector' ;
parameter fore_i_y(regions)                 'shr of I driven by foresight in capital sector' ;
parameter fore_i_z(regions)          	    'shr of I driven by foresight in household capital' ;
parameter fore_c(regions)                   'shr of C driven by foresight' ;

//  --- composition of aggregate imported good

parameter sigma_ff(goods_o,dest     )         'subs elast between F sources' ;
parameter cd_ff   (goods_o,dest     )         '1 if cd, 0 if ces'            ;
parameter delta_ff(goods_o,dest,orig)         'foreign source weights in FF' ;

//  --- composite good

parameter sigma_df(goods_o,regions)           'subs elast between D&F srcs'  ;
parameter cd_df   (goods_o,regions)           '1 if cd, 0 if ces'            ;
parameter delta_dom(goods_o,regions)          'domestic weight in DF'        ;

//  --- trade areas and ER weights

parameter MUL (dest,orig)                   'multilateral tariff flag'     ;
parameter FTA (dest,orig)                   'free trade area tariff flag'  ;
parameter eer_weight(dest,orig)             'trade weights, NEER and REER' ;
parameter alph_rex(regions)                'weight on shadow real exchange rate in CA intervention'  ;

//  --- money demand and monetary rule

parameter int_elast(regions)                'interest elast of money demand' ;
parameter mrule_in(regions)                 'weight on inflation in M rule'  ;
parameter mrule_r(regions)                  'weight on lag interest rate in M rule';
parameter mrule_y(regions)                  'weight on output in M rule'     ;
parameter mrule_ex(regions)                 'weight on exchange rate in M rule' ;
parameter mrule_ny(regions)                 'weight on nominal income in M rule';
parameter mrule_m(regions)                  'weight on money in M rule'      ;
parameter mrule_f(regions)                  'weight on expected variables'      ;
parameter eurowt(regions)                   'weight on countries in Eurozone';

//
//  --- wage equation
//

parameter wage_q(regions)                   'employment param in wage eqn'   ;
parameter wage_p(regions)                   'exp infl weight in wage eqn'    ;

//
//  --- miscellaneous parameters
//

parameter mpc(regions)                      'marginal propensity to consume' ;
parameter mongdp(regions)                   'coefficient on MONE in WELT'    ;
parameter prid_weight(goods,regions)        'weights in PRID'                ;
parameter prim_weight(goods_o,regions)      'weights in PRIM'                ;
parameter prix_weight(goods_o,regions)      'weights in PRIX'                ;
parameter carcoef(goods,regions)            'emissions coefficients, carbon' ;
parameter btucoef(goods,regions)            'emissions coefficients, energy' ;


//
//  ainv is the inverse of (I-ashr) and is used to transform the
//  vector of current account surpluses into a vector of demands
//  for foreign assets by region
//

parameter ainv(owner,abroad)                'inverse of I-ashr'              ;


//
//  Inverse of the make table
//

parameter makeinv(goods,sectors,regions)    'inverse of make table'          ;

//
//  Other
//

parameter base_jk(sec_std,regions)          'base J/K'                       ;

//
//  ASHR and AEYE
//  WM converted variables to parameters:
//

parameter ashr(currency,owner)             'asset split among currencies'   ;
parameter aeye(currency,owner)             'identity matrix'                ;


//==========================================================================
//
//  Variables
//
//==========================================================================

//
//  Technology shocks
//
//     SHY < 1 = productivity reduced
//     SHY = 1 = productivity normal
//     SHY > 1 = productivity increased
//

variable SHEF(sec_std,regions)    'aeei shock'                 exo,pct ;
variable SHEFC(regions)           'aeei shock - consumption'   exo,pct ;
variable SHKC(regions)            'agg con shock'              exo,gdp ;
variable SHKI(regions,sec_std)    'shock in inv equation'      exo,gdp ;
variable SHKM(regions)            'shock to money demand'      exo,pct ;
variable SHL (regions,sec_std)    'labor shock'                exo,pct ;
variable SHK (sec_std,regions)    'capital efficiency shock'   exo,pct ;
variable SHLZ(regions)            'labor shock, HH'            exo,pct ;
variable SHLY(regions)            'labor shock, R'             exo,pct ;
variable SHY (sectors,regions)    'tfp shock'                  exo,pct ;
variable SHYZ(regions)            'tfp shock, HH'              exo,pct ;
variable SHYY(regions)            'tfp shock, R'               exo,pct ;

variable INS (regions,goods_o)      'agg I demand shocks'        exo,gdp ;

//
//  Investment and capital accumulation
//
//     LAM is the costate variable lambda.  Replaces TOB*JC.
//     TPA is the partial adjusment value of q, TOB*SC.
//

//  --- ordinary sectors

variable CAP(sec_std,regions)     'capital stock'              sta,gdp ;
variable INV(sec_std,regions)     'raw investment'             end,gdp ;
variable JNV(sec_std,regions)     'installed investment'       end,gdp ;
variable LAM(sec_std,regions)     'costate var lambda'         cos,del ;
variable PRK(sec_std,regions)     'implicit rental price'      end,pct ;
variable TOB(sec_std,regions)     'marginal q, TOB.NC'         end,del ;
variable TPA(sec_std,regions)     'partial adjustment q'       sta,del ;

//  --- raw capital (R) sector

variable CAPY(regions)            'raw invt capital stock'     sta,gdp ;
variable INVY(regions)            'raw investment'             end,gdp ;
variable JNVY(regions)            'installed RR investment'    end,gdp ;
variable LAMY(regions)            'costate var RR lambda'      cos,del ;
variable PRKY(regions)            'implicit RR rental price'   end,pct ;
variable TOBY(regions)            'marginal q, RR'             end,del ;
variable TPAY(regions)            'partial adjustment q RR'    sta,del ;

//  --- household (HH) capital

variable CAPZ(regions)            'HH capital stock'           sta,gdp ;
variable INVZ(regions)            'HH investment'              end,gdp ;
variable JNVZ(regions)            'installed HH investment'    end,gdp ;
variable LAMZ(regions)            'costate var HH lambda'      cos,del ;
variable PRKZ(regions)            'implicit HH rental price'   end,pct ;
variable TOBZ(regions)            'marginal q, HH'             end,del ;
variable TPAZ(regions)            'partial adjustment q HH'    sta,del ;

//
//  Aggregate investment variables
//

variable PRII(regions)            'prod price of inv goods'    end,pct ;
variable INVT(regions)            'total cap goods demanded'   end,gdp ;

variable STM(sec_std,regions)     'stock market value'         end,gdp ;
variable STMT(regions)            'Total stock market value'   end,gdp ;

//
//  Bilateral trade variables
//

variable PIM(goods_o,dest,orig)     'landed price of IMP'           end,pct ;
variable IMP(goods_o,dest,orig)     'individual imports, IMP.xy'    end,gdp ;
variable IMPX(goods_o,dest,orig)    'individual imports shift '     exo,gdp ;

//
//  Imports at the domestic/foreign (DF) level
//
//     PMR -- includes tariffs
//     PMQ -- before tariffs and taxes
//
//     PMR is used for most calculations: PMQ is just used
//     in the calculation of IMQT, where it is multiplied by
//     IMQ.
//

variable PMQ(goods_o,regions)       'landed price index for IMQ'    end,pct ;
variable PMR(goods_o,regions)       'price of imports incl tariffs' end,pct ;
variable IMQ(goods_o,regions)       'DF imports by good, IMQ.xx'    end,gdp ;

//
//  Exports
//

variable PRX(goods_o,regions)       'price of exports at source'   end,pct ;
variable EXQ(goods_o,regions)       'exports, EXP.xx'              end,gdp ;

//
//  Producers
//

variable OUP(sectors,regions)         'domestic production'        end,gdp ;
variable PRP(sectors,regions)         'producer price'             end,pct ;
variable PRF(sec_std,regions)         'short run profits'          end,gdp ;

variable WAG(sec_std,regions)         'sector wage'                end,pct ;
variable WAGG(regions)         		  'government wage'            end,pct ;
variable LAB(sec_std,regions)         'sector demand for L'        end,gdp ;

variable PRE(sec_std,regions)         'sector price of E'          end,pct ;
variable ENT(sec_std,regions)         'sector demand for E'        end,gdp ;

variable POI(sec_std,regions)         'sector price of M'          end,pct ;
variable OIN(sec_std,regions)         'sector demand for M'        end,gdp ;

variable EN(sec_std,goods_e,regions)  'sector demand for E goods'  end,gdp ;
variable OI(sec_std,goods_m,regions)  'sector demand for M goods'  end,gdp ;

variable PRFT(regions)                'Total economywide profits'  end,gdp ;

//
//  Goods
//

variable PRD(goods,regions)    'pretax price of goods'            end,pct ;
variable OUG(goods,regions)    'domestic supply of goods'         end,gdp ;

variable PRS(goods,regions)    'producer price of composite'      end,pct ;
variable PRY(goods,regions)    'purchase price of composite'      end,pct ;
variable OUY(goods,regions)    'composite supply'                 end,gdp ;

//
//  Households
//
//     Note: price of CNPL is WAGE (no HH specific wage)
//

variable PRFZ(regions)      'imputed short run profits on HH cap'     end,gdp ;
variable CNPK(regions)      'HH cap services'                         end,gdp ;

variable CNPL(regions)      'HH demand for L'                         end,gdp ;

variable PRCE(regions)      'HH price of E'                           end,pct ;
variable CNPE(regions)      'HH demand for E'                         end,gdp ;

variable PRCO(regions)      'HH price of M'                           end,pct ;
variable CNPO(regions)      'HH demand for M'                         end,gdp ;

variable CON(goods_o,regions) 'HH demand for goods'                     end,gdp ;

//
//  Raw capital sector
//

variable PRFY(regions)      'profits on R capital'                    end,gdp ;

variable IITL(regions)      'R demand for L'                          end,gdp ;

variable PRIE(regions)      'R price of E'                            end,pct ;
variable IITE(regions)      'R demand for E'                          end,gdp ;

variable PROI(regions)      'R price of M'                            end,pct ;
variable IITO(regions)      'R demand for M'                          end,gdp ;

variable IIN(goods_o,regions) 'R demand for goods'                      end,gdp ;

//
//  Labor market
//

variable LABO(regions)        'total labor demanded'                  end,gdp ;
variable LABX(regions)        'total labor supply'                    exo,gdp ;

//
//  Exchange rates and trade variables
//

variable EXCH(regions)  'exch rate as US$ per unit of region currency'           stl,pct ;
variable EXCL(regions)  'exch rate as US$ per unit of region currency - lagged'  sta,pct ;
variable REXN(regions)  'real exchange rate with capital controls'		     end,pct ;
//variable REXB(capcon)   'real exchange rate with capital controls'			 	 stl,pct ;
//variable REXL(capcon)   'real exchange rate with capital controls (lag)'	 	 sta,pct ;

variable REXC(regions)  'real exch rate as US$ per unit of regions currency'     cos,pct ;
variable EXCR(regions)  'country risk premium relative to US'                    exo,pct ;

variable EXCX(regions)  'exch rate target '                                      exo,pct ;

variable EXQT(regions)  'value of exports at source'                             end,gdp ;
variable IMQT(regions)  'value of imports at dest'                               end,gdp ;
variable TBAL(regions)  'trade surplus, domestic currency'                       end,gdp ;
variable TBAU(regions)  'trade surplus, USD'                                     end,gdp ;


variable CURN(regions)  'current account, dom currency, using INAS'              end,gdp ;
variable CURR(regions)  'current account, US$, using IRAS'                       end,gdp ;

//
//  International financial assets
//

variable ABUY(owner)              'new purchases of foreign assets'                end,gdp ;
variable ASSE(currency,owner)     'assets in each currency, including own'         sta,usgdp ;
variable ASSU(regions)            'assets held by region, in US$'                  end,gdp ;

//
//  National accounting and macro variables
//

variable CONP(regions)            'national accounts C'                          end,gdp ;
variable GCET(regions)            'national accounts G except gov labor'         end,gdp ;
variable GOVT(regions)            'national accounts G including labor'          end,gdp ;

variable GDPN(regions)            'GDP, nominal'                                 end,gdp ;
variable GDPR(regions)            'GDP, real'       						     end,gdp ;
variable GNPR(regions)            'GNP, GDPR plus PBAL and interest'             end,gdp ;
variable PGDP(regions)            'GDP, implicit price deflator GDPN/GDPR'       end,pct ;
variable INAS(regions)            'net int pmts on for assets using INTN (USD)'  end,gdp ;
variable INCM(regions)            'after tax household income'                   end,gdp ;
variable INFL(regions)            'inflation rate in PRCT'                       end,del ;
variable INFP(regions)            'inflation rate in PRID'                       end,del ;
variable INTN(regions)            'interest rate, short (policy), nominal'       stl,del ;
variable INTL(regions)            'interest rate, short-run, nominal (lagged)'   sta,del ;
variable INPN(regions)            'desired interest rate, short-run, nominal'    stl,del ;
variable INPL(regions)            'desired interest rate, short-run,  (lagged)'  sta,del ;
variable INTR(regions)            'risk adjusted interest rate, short-run, real' end,del ;
variable INTF(regions)            'risk free interest rate, short-run, real'     end,del ;
variable RB10(regions)            'interest rate, 10-year, real'                 end,del ;
variable NB10(regions)            'interest rate, 10-year, nominal'              end,del ;
variable NB05(regions)            'interest rate, 5-year, nominal'               end,del ;
variable NB02(regions)            'interest rate, 2-year, nominal'               end,del ;

variable INFX(regions)            'inflation target'                             exo,del ;
variable INTX(regions)            'interest rate target'                         exo,del ;

variable IRAS(regions)            'net int pmts on for assets using INTR (USD)'  end,gdp ;
variable MONE(regions)            'money demanded IN LOGS'                       end,pct ;
variable MONL(regions)            'money demanded as %GDP'                       end,gdp ;
variable MONX(regions)            'money target IN LOGS'                         exo,pct ;
variable NEER(regions)            'trade-weighted exch rate, FC/domestic'        end,pct ;
variable OUTP(regions)            'agg output Q index to match PRID'             end,gdp ;
variable LOGY(regions)            'ln of output'                                 ets,pct ;
variable LGYX(regions)            'ln of output target'                          exo,pct ;
variable EYGR(regions)               'expected output growth'                    end,pct ;

variable LGYL(regions)            'ln of output (lagged)'                        sta,pct ;
variable YGRO(regions)            'real output growth'                 			 end,pct ;
variable NGRO(regions)            'nominal output growth'                 		 end,pct ;
variable ROGY(regions)            'potential output growth'                 	 exo,pct ;

// note PBAL <0 means country pays transfer		//
// PBAG < 0 means government pays transfer		//

variable PBAL(regions)            'value of permits sold, USD' 					exo,gdp ;
variable PBAG(regions)            'value of permits sold through govt USD'    	exo,gdp ;

variable PRCT(regions)            'aggregate price of consumer goods'            ets,pct ;
variable EPRC(regions)               'expected PRCT inflation rate'              end,pct ;
variable PRXX(regions)            'price of consumer goods expected shock'      exo,pct ;
variable PRCL(regions)            'aggregate price of consumer goods lag'   sta,pct ;
variable PRGT(regions)            'aggregate price of government goods'          end,pct ;

variable PRID(regions)            'weighted price of domestic output'            ets,pct ;
variable PRDX(regions)            'weighted price of domestic output'            exo,pct ;
variable PRDL(regions)            'weighted price of domestic output lag'   sta,pct ;

variable PRIM(regions)            'weighted price of imports'                    end,pct ;
variable PRIX(regions)            'weighted price of exports'                    end,pct ;
variable REER(regions)            'trade-weighted real exch rate, FC/domestic'   end,pct ;

variable RISE(sec_std,regions)    'equity risk premium by sector by region' exo,del ;
variable RISR(regions)            'risk premium in the yield curve'              exo,del ;
variable RISZ(regions)            'risk premium for HH capital'                  exo,del ;
variable RISY(regions)            'risk premium for R capital'                   exo,del ;
variable RISW(regions)            'risk premium for human wealth'                exo,del ;
variable RISH(regions)            'risk premium shock for human wealth'          exo,del ;

variable SAVI(regions)            'domestic saving, real'                        end,gdp ;
variable SAVN(regions)            'domestic saving, nominal'                     end,gdp ;
variable SAVT(regions)            'domestic non-governmen saving, nominal'       end,gdp ;

//
//  Tax rates, tax revenue, government spending, deficits and debt
//
//
//  --- rates

variable TCOR(regions)            'tax rate on corporate profits'          exo,pct ;
variable TINC(regions)            'tax rate on labor income'               exo,pct ;
variable TITC(sec_std,regions)    'rate of ITC'                            exo,pct ;
variable TITCH(regions)           'rate of ITC for households'             exo,pct ;
variable TAXS(regions)            'exogenous lump sum tax'                 exo,gdp ;
variable TRANX(regions)           'exogenous transfers'                    exo,gdp ;
variable TAX(goods,regions)       'sales tax on composite'                 exo,pct ;
variable TEX(goods,regions)       'extern tax on composite'                exo,pct ;
variable TIF(goods_o,dest   )     'fta tariff rates'                       exo,pct ;
variable TIM(goods_o,dest,orig)     'multilateral tariff rates'          exo,pct ;
variable TIX(goods_o,dest   )     'multilateral iceberg costs'             exo,pct ;

variable BCT(goods_o,dest,orig)   'unit border tax adjustment'             exo,cent ;
variable TCAX(regions)            'unit tax on carbon - real'              exo,cent ;
variable TCP(goods,regions)       'nonlinear unit tax shock for carbon'    exo,cent ;
variable TCAW                     'unit tax on carbon'                     end,cent ;

variable TBFD(regions)            'unit tax on energy'                     exo,cent ;
variable TBFI(regions)            'unit tax on energy, imports'            exo,cent ;
variable TBFX(regions)            'unit tax on energy, exports'            exo,cent ;

//  --- revenue

variable TAXC(regions)        'revenue from sales & corp taxes'        end,gdp ;
variable TAXH(regions)        'revenue from taxes on wages'            end,gdp ;
variable TAXL(regions)        'revenue for bond interest plus TAXS'    end,gdp ;
variable TAXM(regions)        'tariff revenue'                         end,gdp ;
variable TAXT(regions)        'total revenue'                          end,gdp ;
variable TAXX(regions)        'extern tax revenue'                     end,gdp ;
variable TXM(goods_o,dest)      'tariff revenue by good'                 end,gdp ;

//  --- spending

variable GOVL(regions)        'labor used by gov'                      exo,gdp ;

variable GCE(goods_o,regions)   'government purchases of goods&serv'   end,gdp ;

//  --- domestic public debt and fiscal deficit

variable BOND(regions)  'bonds'                                        sta,gdp ;
variable DEFI(regions)  'fiscal deficit, using INTR'                   end,gdp ;
variable DEFN(regions)  'fiscal deficit, using INTN'                   end,gdp ;
variable DEFX(regions)  'fiscal deficit, using INTR (exog)'            exo,gdp ;

//
//  Other variables
//

//  --- carbon emissions and energy consumpion

//variable EMIS(regions)  'carbon emissions'                             end,mmtgdp ;
//variable EMIT(regions)  'carbon emissions'                             end,mmtgdp ;
//variable EMZT(regions)  'carbon emissions'                             end,mmtusgdp ;
//variable EMISW          'carbon emissions, global'                     end,mmtusgdp ;
//variable EMISZ          'carbon emissions, Annex B'                    end,mmtusgdp ;
//variable EMISZX          'carbon emissions, Annex B'                    end,mmtusgdp ;
//variable EMIX(regions)  'carbon emissions, exogenous'                  exo,mmtgdp ;

//variable EMCO(regions)  'CO2 emissions'                                end,mmtgdp ;
//variable EMCOW          'CO2 emissions, global'                        end,mmtusgdp ;
//variable EMCOZ          'CO2 emissions, Annex B'                       end,mmtusgdp ;

//variable ENER(regions)  'energy consumption'                           end,btugdp ;
//variable ENERW          'energy consumption, global'                   end,btuusgdp ;
//variable ENERZ          'energy consumption, Annex B'                  end,btuusgdp ;

variable TRAN(regions)  'total transfers'                              end,gdp ;
variable WAGE(regions)  'wage rate'                                    sta,pct ;
variable WELH(regions)  'human wealth'                                 cos,gdp ;
variable WELT(regions)  'total wealth'                                 end,gdp ;

//
//  YRATN, YRATR and other regional exogenous variables
//

variable YRATN(regions) 'GDP ratio, nominal'      exo,pct;
variable YRATR(regions) 'GDP ratio, real'         exo,pct;
variable YRATP(regions) 'GDP ratio, PPP'          exo,pct;
variable LGDPN(regions) 'GDP, nominal'            exo,del;
variable LGDPR(regions) 'GDP, real'               exo,del;
variable LGDPP(regions) 'GDP, PPP'                exo,del;
variable EGAS(regions)  'CO2 emissions from gas'  exo,mmt;
variable EOIL(regions)  'CO2 emissions from oil'  exo,mmt;
variable ECOL(regions)  'CO2 emissions from coal' exo,mmt;
variable BGAS(regions)  'Quads from gas'          exo,btu;
variable BOIL(regions)  'Quads from oil'          exo,btu;
variable BCOL(regions)  'Quads from coal'         exo,btu;

//
//  ASHR and AEYE are conceptually parameters but need to be coded as
//  exogenous variables in order for the tablo backend to be able to
//  generate time-subscripted code without running into a conformability
//  error in the ASSE equation.  (Automatic time-domain expansion of
//  variables uses more elaborate conformability rules.)
//
//  ashr is a matrix of shares of each region's assets in currencies
//  other than its own.
//

// variable ASHR(currency,owner)      'asset split among currencies'      exo,del ;
// variable AEYE(currency,owner)      'identity matrix'                   exo,del ;


//==========================================================================
//
//  Establish normalization
//
//==========================================================================

EXCH(UU) = 0;
//REXC(UU) = 0;


//==========================================================================
//
//  Demand for each composite good
//
//==========================================================================

goods_e: OUY = CON + IIN + INS + GCE + EXQ + sum(sec_std,EN);
goods_m: OUY = CON + IIN + INS + GCE + EXQ + sum(sec_std,OI);


//==========================================================================
//
//  Imports, exports and corresponding price indexes
//
//==========================================================================
//
//  IMQ: demand for individual imports in composite good
//
//     Note: IMQ is used as the variable name to distinguish this
//     variable from IMP, which is used for individual goods.
//     Price of IMQ is PMR*(1+TAX)
//
//  cd/ces: no changes needed

goods_o: IMQ = (1-delta_dom) * OUY * exp( PRS - PMR )^sigma_df ;

//
//  PIM: landed domestic-currency prices of individual imports
//
//     Note: this is a new variable not present in the v60 Gauss/Ox
//     code.  Should it be inclusive of tariffs?
//

PIM = EXCH(orig) + PRX(orig)#dest - EXCH(dest);

//
//  IMP: lower-tier demands for imports from specific countries
//
//     Note: PMR is inclusive of tariffs and PIM is not, so
//     PIM must be multiplied by the tariffs in the denominator
//     of the price term.
//
//  cd/ces: no changes needed

goods_o: IMP = delta_ff * IMQ(dest)*(carcoef(dest)*TCP(dest)+btucoef(dest)*TBFI(dest)+BCT+
      (1 + (TIM+TIX)*MUL#goods_o + TIF*FTA#goods_o)*exp(PIM-PMR(dest)))^(-sigma_ff(dest))+IMPX;

//
//  PMQ: implicit price index for IMQ
//
//     Note: the variable formerly known as PRM has been renamed PMQ to
//     reduce confusion with PMR.
//

PMQ = ln( sum(orig, IMP*exp(PIM) ) / IMQ) ;

//
//  IMPT: Total value of imports
//

IMQT = sum(goods_o, exp(PMQ)*IMQ )/exp(PRIM);

//
//  EXPT: Total value of exports, in domestic currency
//
//     Note that EXP has been renamed EXQ to avoid conflict with
//     the exp() function.
//

EXQT = sum(goods_o, exp(PRX)*EXQ )/exp(PRIX) ;

//
//  EXQ: Exports of individual goods
//
//     Note: this variable has been renamed EXQ to avoid conflict with
//     the exp() function.
//

EXQ(orig) = sum(dest,IMP);

//
// Price of exported goods
//

goods_o: PRX = ln( (1+TEX)*exp(PRS) - carcoef*TCP + btucoef*TBFX);


//==========================================================================
//
//  Domestic producers
//
//==========================================================================
//
//  OUG, OUP: Derived demand for domestic output
//
//  Note: new variable OUG added to allow goods and sectors to be
//  linked via a make table.
//
//     OUG = demand for domestic goods
//     OUP = demand for domestic producer output
//     OUY = demand for composite goods
//
//  cd/ces: no changes needed

goods_o: OUG = delta_dom * OUY * exp( PRS - PRD )^sigma_df ;

//
//  Map demand for domestic goods into demands for domestic output
//  via the make table.  Input demands will be driven by OUP as
//  before.
//

OUP = sum( goods, makeinv*OUG );

//
//  Top tier producer demands for labor, energy and materials
//

sec_std: LAB = exp(SHL+SHY   )^(sigma_o-1 ) * delta_o(l)  * OUP  * exp(PRP-WAG)^sigma_o ;
sec_std: ENT = exp(SHEF+SHY  )^(sigma_o-1 ) * delta_o(e)  * OUP  * exp(PRP-PRE)^sigma_o ;
sec_std: OIN = exp(SHY       )^(sigma_o-1 ) * delta_o(m)  * OUP  * exp(PRP-POI)^sigma_o ;

IITL = exp(SHLY+SHYY)^(sigma_oR-1) * delta_oR(l) * INVT * exp(PRII-WAGE)^sigma_oR ;
IITE = exp(SHYY     )^(sigma_oR-1) * delta_oR(e) * INVT * exp(PRII-PRIE)^sigma_oR ;
IITO = exp(SHYY     )^(sigma_oR-1) * delta_oR(m) * INVT * exp(PRII-PROI)^sigma_oR ;

//
//  Producer demands for individual energy and materials goods
//
//  cd/ces: no changes needed

goods_e: IIN = delta_eR * IITE * exp( PRIE - PRY )^sigma_eR;
goods_m: IIN = delta_mR * IITO * exp( PROI - PRY )^sigma_mR;

//
//  Total demand for labor
//

LABO = IITL + CNPL + GOVL + sum(sec_std,LAB);

//
//  PRS: producer price of the composites (CES)
//
//  cd/ces: merged via cd flag

goods_o: PRS = cd_df*( delta_dom *PRD + (1-delta_dom)*PMR )
             + (1-cd_df)*ln( delta_dom * exp(PRD)^(1-sigma_df)
                          + (1-delta_dom) * exp(PMR)^(1-sigma_df)
                         ) / (1-sigma_df*(1-cd_df)) ;

//
//  PRY: purchaser's price of the composites
//

PRY = ln(1+TAX) + PRS ;

//==========================================================================
//
//  Import price indexes
//
//==========================================================================
//
//  PRIM: price index for imports as a group
//  PMR:  landed, duty-paid price of imports.
//
//     Note: in previous versions PMR included externality taxes
//     imposed on imports.
//
//  cd/ces: merged via cd flag

goods_o: PMR(dest) = cd_ff*sum(orig, delta_ff*ln(
                     carcoef(dest)*TCP(dest)
                   + btucoef(dest)*TBFI(dest)
				   + BCT
                   + (1+(TIM+TIX)*MUL#goods_o+TIF*FTA#goods_o)*exp(PIM)))
          + (1-cd_ff)*ln( sum(orig,
            delta_ff*(carcoef(dest)*TCP(dest)
          + btucoef(dest)*TBFI(dest)
		  + BCT
        +(1+(TIM+TIX)*MUL#goods_o+TIF*FTA#goods_o)*exp(PIM))^(1-sigma_ff))
                        ) / (1-sigma_ff*(1-cd_ff)) ;

PRIM = sum(goods_o, prim_weight*PMQ );


//==========================================================================
//
//  Producer price indexes
//
//==========================================================================
//
//  PRE & PRIE: KLEM energy price index
//  POI & PROI: KLEM materials price index
//
//  cd/ces: merged via cd flag

PRIE = cd_eR*sum(goods_e, delta_eR*PRY(goods_e))
     + (1-cd_eR)*ln( sum(goods_e, delta_eR*exp(PRY(goods_e))^(1-sigma_eR))
                   ) / (1-sigma_eR*(1-cd_eR)) ;

PROI = cd_mR*sum(goods_m, delta_mR*PRY(goods_m) )
     + (1-cd_mR)*ln( sum(goods_m, delta_mR*exp(PRY(goods_m))^(1-sigma_mR))
                   ) / (1-sigma_mR*(1-cd_mR)) ;

//
//  PRD: pretax price of domestic GOODS
//
//  Note: formerly PRP adjusted for TCAR and TBFD.  Now handled
//  differently because of the separation between sectors and goods.
//

PRD = ln( exp(sum(sectors, makeinv*PRP)) + carcoef*TCP + btucoef*TBFD );

//
//  PRP: unit cost of domestic OUTPUT
//
//  Note: when the make table is an identity matrix, what buyers pay for
//  a sector's output, PRD, will be equal to the unit cost for the sector,
//  PRP.  When there is joint production, however, PRP will reflect the
//  unit cost of the firm's output bundle, which will consist of multiple
//  goods.  In that case, PRD will not equal PRP (because the good is
//  coming from multiple producers).
//
//  cd/ces: merged via cd flag

sec_std: PRP = cd_o*( delta_o(k)*PRK
     	       + delta_o(l)*WAG
             + delta_o(e)*PRE
             + delta_o(m)*POI
             - delta_o(l)*SHL
             - delta_o(k)*SHK
             - delta_o(e)*SHEF
             )
             + (1-cd_o)*ln( delta_o(k)*exp(PRK-SHK )^(1-sigma_o)
                          + delta_o(l)*exp(WAG-SHL )^(1-sigma_o)
                          + delta_o(e)*exp(PRE-SHEF)^(1-sigma_o)
                          + delta_o(m)*exp(POI     )^(1-sigma_o)
                          ) / (1-sigma_o*(1-cd_o))
             - SHY ;

//
//  PRII: price of new capital goods
//
//  cd/ces: merged via cd flag

PRII = cd_oR*( delta_oR(k)*PRKY
             + delta_oR(l)*WAGE
             + delta_oR(e)*PRIE
             + delta_oR(m)*PROI
             - delta_oR(l)*SHLY
               )
     + (1-cd_oR)*ln( delta_oR(k)*exp(PRKY     )^(1-sigma_oR)
                   + delta_oR(l)*exp(WAGE-SHLY)^(1-sigma_oR)
                   + delta_oR(e)*exp(PRIE)^(1-sigma_oR)
                   + delta_oR(m)*exp(PROI     )^(1-sigma_oR)
                   ) / (1-sigma_oR*(1-cd_oR))
     - SHYY ;


//
//  PRK: implicit rental price of capital in each sector
//  Given by the marginal value product of capital: P*dQ/dK
//
//  cd/ces: no changes needed

sec_std: PRK = PRP + ln( delta_o(k)*OUP/CAP )/sigma_o
    + (SHY+SHK)*(sigma_o-1)/sigma_o ;

PRKY = PRII + ln( delta_oR(k)*INVT/CAPY )/sigma_oR
     + SHYY*(sigma_oR-1)/sigma_oR ;

PRKZ = PRCT + ln( delta_oH(k)*CONP/CAPZ )/sigma_oH
     + SHYZ*(sigma_oH-1)/sigma_oH ;

//
//  Wage equation
//

lead(WAGE) = WAGE + wage_p*(lead(PRCT)+PRXX-PRCT) +
             (1-wage_p)*(PRCT-PRCL) + wage_q*ln(LABO) ;

last: LABO = LABX {miss} ;

//
//  Map regional wage to each sector
//

WAG = WAGE#sec_std;

//==========================================================================
//
//  Investment and capital accumulation
//
//     CAPY: raw capital goods sector
//     CAPZ: capital accumulation
//
//==========================================================================
//
//  CAP: capital accumulation
//
//  ... struct 2: d(CAP)/dt = ...
//

lead(CAP ) = JNV  + (1-delta-labgrow)*CAP  ;
lead(CAPY) = JNVY + (1-delta-labgrow)*CAPY ;
lead(CAPZ) = JNVZ + (1-delta-labgrow)*CAPZ ;

last: CAP  = JNV  / (delta+labgrow) {miss} ;
last: CAPY = JNVY / (delta+labgrow) {miss} ;
last: CAPZ = JNVZ / (delta+labgrow) {miss} ;

//
//  INV: investment by sector
//  JNV: installed new capital goods
//
//  ... struct  3: INV = (1+(phi/2)*JNV/CAP)*JNV
//  ... struct 11: JNV = (TOB-1)*CAP/phi
//  ... struct 12: INV = (TOB^2-1)*CAP/(2*phi)
//
//  These two equations are modified to accomodate agents with
//  adaptive expectations.  As of 6/05 the treatment of adaptive
//  expectations is slightly inconsistent between firms and
//  households and the investment sector.  For firms, the INV
//  equation was driven by weighted q^2 and the JNV follows from
//  it.  For households and the investment sector, weighted q
//  drives JNV and INV follows from that.  The difference boils
//  down to this:
//
//     (s1*tob + s2*tpa)^2 != s1*tob^2 + s2*tpa^2
//
//  This version follows the gauss code and retains the
//  inconsistency.
//
//  In addition, the INV equation is a rewritten version of 12 and
//  the JNV equation substantially transformed from the original
//  specification (to work around linearization issues?).
//
//  Alternative specification that would be consistent with
//  household and investment sector:
//
//  INV = JNV*( 1 + (phi/2)*JNV/CAP  ) + SHKI ;
//  JNV = CAP*( TOB*forei + TPA*(1-forei) - 1 )/phi;
//

INV = ( (1+.5*(TOB-1))*(TOB-1)*CAP/phi )*forei
    + ( (1+.5*(TPA-1))*(TPA-1)*CAP/phi )*(1-forei)
    + SHKI ;

JNV = ( INV + phi*0.5*(base_jk^2)*CAP )/(1+phi*base_jk);

//
//  INVY: investment by sector R
//
//  ... struct  3: INV = (1+(phi/2)*JNV/CAP)*JNV
//  ... struct 11: JNV = (TOB-1)*CAP/phi
//

INVY = JNVY*( 1 + (phi_y/2)*JNVY/CAPY ) ;
INVZ = JNVZ*( 1 + (phi_z/2)*JNVZ/CAPZ ) ;

JNVY = CAPY*( fore_i_y*TOBY + (1-fore_i_y)*TPAY - 1 )/phi_y;
JNVZ = CAPZ*( fore_i_z*TOBZ + (1-fore_i_z)*TPAZ - 1 )/phi_z;

//
//  LAM: the marginal value of an additional unit of capital
//
//  ... struct 9: d(LAM)/dt = ...
//
//  Note that the equation below has been simplified by using the
//  definition of PRK.
//

lead(LAM) = (1+INTR+RISE+delta)*LAM
          - (1-TCOR)*exp(PRK-PRID)
          - (1-TITC)*exp(PRII-PRID)*(phi/2)*(JNV/CAP)^2;

last: LAM = ( (1-TCOR)*exp(PRK-PRID)
            + (1-TITC)*exp(PRII-PRID)*(phi/2)*(JNV/CAP)^2 )
            / (INTR+RISE+delta) {miss} ;

//
//  Raw capital sector (does TCOR belong here?)
//

lead(LAMY) = (1+INTR+RISY+delta)*LAMY
           - (1-TCOR)*exp(PRKY-PRID)
           - exp(PRII-PRID)*(phi_y/2)*(JNVY/CAPY)^2;

last: LAMY = ( (1-TCOR)*exp(PRKY-PRID)
           + exp(PRII-PRID)*(phi_y/2)*(JNVY/CAPY)^2 )
           / (INTR+RISY+delta) {miss} ;

//
//  Household capital
//

lead(LAMZ) = (1+INTR+RISZ+delta)*LAMZ
           - exp(PRKZ-PRID)
           - (1-TITCH)*exp(PRII-PRID)*(phi_z/2)*(JNVZ/CAPZ)^2;

last: LAMZ = ( exp(PRKZ-PRID) + (1-TITCH)*exp(PRII-PRID)*(phi_z/2)*(JNVZ/CAPZ)^2 )
           / (INTR+RISZ+delta) {miss} ;


//
// TOB: Marginal q
//
// ... struct 10: TOB = LAM/( (1-TITC)*PRII )
//

TOB  = LAM *exp(PRID-PRII)/(1-TITC) ;
TOBY = LAMY*exp(PRID-PRII);
TOBZ = LAMZ*exp(PRID-PRII)/(1-TITCH);

//
// TPA: partial adjustment version of q
//

lead(TPA)  = TPA  + adapt*( TOB  - TPA  );
lead(TPAY) = TPAY + adapt*( TOBY - TPAY );
lead(TPAZ) = TPAZ + adapt*( TOBZ - TPAZ );

last: TPA  = TOB  {miss} ;
last: TPAY = TOBY {miss} ;
last: TPAZ = TOBZ {miss} ;

//
//  PRF: Short run profits
//  Revenue less variable costs less investment costs.
//
//  PRFY is profit on raw capital capital
//  PRFZ is imputed profits on HH capital
//

sec_std: PRF = ( OUP*exp(PRP)
       - ENT*exp(PRE)
       - LAB*exp(WAG)
       - OIN*exp(POI)
       - (1-TITC)*INV*exp(PRII) )/exp(PRID) ;

PRFY = ( INVT*exp(PRII)
       - IITE*exp(PRIE)
       - IITL*exp(WAGE)
       - IITO*exp(PROI)
       - INVY*exp(PRII) )/exp(PRID);

PRFZ = ( CONP*exp(PRCT)
       - CNPE*exp(PRCE)
       - CNPL*exp(WAGE)
       - CNPO*exp(PRCO)
       - (1-TITCH)*INVZ*exp(PRII) )/exp(PRID) ;

PRFT = sum(sec_std,PRF) + PRFY  ;

//
//  Stock market values
//
//  Note: should this be made consistent with the treatment of
//  adaptive expectations?
//

STM = LAM*CAP/(1-TITC) ;

STMT = sum(sec_std,STM) ;


//
// Demand for new investment goods
//

INVT = INVY + INVZ + sum(sec_std,INV) ;


//==========================================================================
//
//  Aggregate price and output indexes
//
//==========================================================================
//
//  PRID: domestic output
//  PRIX: exports
//

PRID = sum( goods, prid_weight*PRD ) ;
PRIX = sum( goods_o, prix_weight*PRX ) ;

//
//  OUTP: aggregate quantity index to match PRID
//

OUTP = sum ( goods, exp(PRD)*OUG )/exp(PRID) ;

//
//  LOGY: log of output
//

LOGY = ln(OUTP);

lead(LGYL)= LOGY;

YGRO = LOGY - LGYL;

NGRO = YGRO + INFP;


//==========================================================================
//
//  Income, consumption, interest payments, taxes, etc
//
//==========================================================================
//
//  INCM: total after-tax income
//

INCM = TRAN - TAXL
     + INTR*BOND
     + IRAS/exp(REXN)
     + PRFZ + (1-TCOR)*PRFT
	 + (1-TINC)*( exp(WAGE)*(IITL+CNPL)+ exp(WAGG)*(GOVL)	 
     + sum(sec_std,exp(WAG)*LAB) )/exp(PRID) ;

//
//  CONP: consumption expenditure
//

CONP = fore_c*(timepref+RISW)*WELT*exp(PRID-PRCT)
     + (1-fore_c)* mpc * INCM*exp(PRID-PRCT)
     + SHKC ;

//
//  IRAS: net interest payments from abroad using INTR, in US$
//  INAS: net interest payments from abroad using INTN, in US$
//

IRAS = sum( currency, INTR(currency)*exp(REXN(currency))*ASSE ) ;
INAS = sum( currency, INTN(currency)*exp(REXN(currency))*ASSE ) ;


//==========================================================================
//
//  Households
//
//==========================================================================
//
//  HH demand for KLEM
//
//  cd/ces: no changes needed

CNPL = exp(SHLZ+SHYZ)^(sigma_oH-1) * delta_oH(l) * CONP * exp(PRCT-WAGE)^sigma_oH ;
CNPE = exp(SHEFC+SHYZ)^(sigma_oH-1) * delta_oH(e) * CONP * exp(PRCT-PRCE)^sigma_oH ;
CNPO = exp(SHYZ     )^(sigma_oH-1) * delta_oH(m) * CONP * exp(PRCT-PRCO)^sigma_oH ;
CNPK = exp(SHYZ     )^(sigma_oH-1) * delta_oH(k) * CONP * exp(PRCT-PRKZ)^sigma_oH ;


//
//  HH demand for individual E and M goods
//
//  cd/ces: no changes needed

goods_e: CON = delta_eH * CNPE * exp( PRCE - PRY )^sigma_eH;
goods_m: CON = delta_mH * CNPO * exp( PRCO - PRY )^sigma_mH;

//
//  consumer price index
//
//  cd/ces: merged via cd flag

PRCT = cd_oH*( delta_oH(k)*PRKZ
             + delta_oH(l)*WAGE
             + delta_oH(e)*PRCE
             + delta_oH(m)*PRCO
             - delta_oH(l)*SHLZ
             - delta_oH(e)*SHEFC
          )
     + (1-cd_oH)*ln( delta_oH(k)*exp(PRKZ     )^(1-sigma_oH)
                   + delta_oH(l)*exp(WAGE-SHLZ)^(1-sigma_oH)
                   + delta_oH(e)*exp(PRCE-SHEFC)^(1-sigma_oH)
                   + delta_oH(m)*exp(PRCO     )^(1-sigma_oH)
                   ) / (1-sigma_oH*(1-cd_oH))
     - SHYZ ;

//
//  Component prices
//
//  cd/ces: merged via cd flag

PRCE = cd_eH*sum( goods_e, delta_eH*PRY(goods_e) )
     + (1-cd_eH)*ln( sum(goods_e, delta_eH*exp(PRY(goods_e))^(1-sigma_eH))
                   ) / (1-sigma_eH*(1-cd_eH)) ;

PRCO = cd_mH*sum( goods_m, delta_mH*PRY(goods_m) )
     + (1-cd_mH)*ln( sum(goods_m, delta_mH*exp(PRY(goods_m))^(1-sigma_mH))
                   ) / (1-sigma_mH*(1-cd_mH)) ;

//==========================================================================
//
//  Various equations
//
//==========================================================================
//
//  Money supply and demand
//

MONE = PRID + LOGY + int_elast*INTN + SHKM ;

INTN = INTL + mrule_m*(INPN - INTN)+ INTX;


lead(INTL) = INTN;

//INPN = mrule_r*INPL + mrule_ex*(EXCH -EXCL - EXCX)
//         + mrule_in*(INFL - INFX)
//         + mrule_ny*(LOGY + PRID - LGYX - PRDX- ROGY)
//         + mrule_y*(LOGY - LGYL - ROGY)	;
            

lead(INPL) = INPN;


//INPN = mrule_r*INPL + mrule_ex*(EXCH -EXCL - EXCX)
//       + mrule_in*(INFL - INFX)
//       + mrule_ny*(NGRO - ROGY - INFX)
//       + mrule_ny*(ln(GDPN))
//       + mrule_ny*(LOGY+PRID)
//       + mrule_y*(YGRO - ROGY) ;
	   
//INTN = INPN + INTX;

INPN = mrule_r*INPL  + mrule_ex*(EXCH - EXCX)
       + mrule_ny*( INFL - INFX + LOGY-LGYL - ROGY)
       + mrule_f*mrule_in*( EPRC - INFX )
	   + (1-mrule_f)*mrule_in*( INFL - INFX )
       + mrule_f*mrule_y*( EYGR - ROGY  )
	   + (1-mrule_f)*mrule_y*( YGRO - ROGY  );
      

EYGR =  lead(LOGY) - LOGY;

EPRC =  lead(PRCT)-PRCT;



//
//  Real interest rate
//

INTF = INTN - lead(PRID) + PRID ;

INTR = INTF + RISR ;

last: INTR = INTN {miss} ;

//
//  Inflation rate
//

INFL = PRCT - PRCL ;
INFP = PRID - PRDL ;

lead (PRCL) = PRCT ;
lead (PRDL) = PRID ;


//
//  GDP/GNP accounting
//

GDPN = exp(PRCT)*CONP
     + exp(PRID)*GCET	 
     + exp(PRII)*INVT
     + exp(PRID)*TBAL
     + sum(goods_o,exp(PRII)*INS) ;

GDPR = CONP
     + GCET
     + INVT
     + TBAL
     + sum(goods_o,INS) ;

PGDP = ln(GDPN) - ln(GDPR) ;

GNPR = GDPR + (PBAL+IRAS)/exp(REXN) ;

//
//  CURN: current account in domestic currency
//

CURN = TBAL + (PBAL+INAS)/exp(REXN) ;

//
//  CURR: current account in US dollars
//

CURR = TBAU + PBAL + IRAS ;

//
//  Zero sum constraint on permit trades
//
//  sum(regions,PBAL*YRATR) = 0 ;
//
//  Note: not used in the MSGPROC version.
//

//
// Total wealth
//

WELT = BOND + ASSU/exp(REXN) + mongdp*exp(MONE)/exp(PRID)
     + WELH
     + LAMY*CAPY + LAMZ*CAPZ
     + sum(sec_std,STM) ;

//
// Human wealth
//

lead(WELH) = ( 1 + RISW + RISH + INTR - labgrow )*WELH
           - ( TRAN - TAXH - TAXL )
           - ( exp(WAGE)*(IITL+CNPL) + exp(WAGG)*(GOVL)
           + sum(sec_std,exp(WAG)*LAB) )/exp(PRID) ;

last: WELH = ( TRAN - TAXH - TAXL
           + ( exp(WAGE)*(IITL+CNPL) + exp(WAGG)*(GOVL)
           + sum(sec_std,exp(WAG)*LAB) )/exp(PRID) )
           / ( RISW + RISH + INTR - labgrow ) {miss} ;

//
// Tariff revenue by good
//

TXM = sum(orig, (TIM*MUL#goods_o + TIF*FTA#goods_o)*exp(PIM)*IMP )/exp(PRID) ;

//
//  Total tariff revenue
//

TAXM(dest) = sum(goods_o,TXM) ;

//
//  Export taxes
//

TAXX = sum(goods_o, TEX(goods_o)*exp(PRS(goods_o))*EXQ )/exp(PRID) ;

//
//  Total tax collections
//

TAXT = TAXC+TAXH+TAXL+TAXM+TAXX+TAXE;

//
// World Target
//

//  EMZT = sum( annexB, EMIS) - sum(annexB, EMIX)+
//       sum( notAnnexB, EMIS) - sum(notAnnexB, EMIX) ;

//
// Annex B Target
//
// EMZT = sum( AnnexB, EMIS) - sum( AnnexB, EMIX);





//
// Taxes on households
//

TAXH = TINC*( exp(WAGE)*(IITL+CNPL)+exp(WAGG)*(GOVL) 
            + sum(sec_std,exp(WAG)*LAB)  )/exp(PRID)
            - (TITCH*exp(PRII)*INVZ)/exp(PRID);

//
//  Endogenous transfers
//

TRAN = TRANX - transgdp*OUTP;

//
//  DEFN: Government deficit at INTN
//  DEFI: Government deficit at INTR
//

WAGG=WAGE;

GOVT = GCET + GOVL*exp(WAGG-PRID) ;

DEFN = GOVT + TRAN - TAXT + INTN*BOND ;

DEFI = GOVT + TRAN - TAXT + INTR*BOND ;

//DEFI = DEFX ;


//
// Value of government spending excluding labor
//
//  Change to exclude tax?
//

GCET = sum(goods_o, GCE*exp(PRY(goods_o)) )/exp(PRID) ;

goods_e: GCE = delta_eG*(delta_oG(e)/(delta_oG(e)+delta_oG(m)))
             * GOVS*exp(PRID)/exp(PRY);

goods_m: GCE = delta_mG*(delta_oG(m)/(delta_oG(e)+delta_oG(m)))
             * GOVS*exp(PRID)/exp(PRY);

//
//  Government price index
//

PRGT = (delta_oG(e)/(delta_oG(e)+delta_oG(m)))
     * sum(goods_e,delta_eG*PRY(goods_e))
     + (delta_oG(m)/(delta_oG(e)+delta_oG(m)))
     * sum(goods_m,delta_mG*PRY(goods_m));

//
//  Evolution of stock of bonds, real exchange rates and foreign assets
//

lead(BOND) = DEFI + BOND*(1-labgrow) - PBAG ;

last: BOND = DEFI/labgrow {miss} ;

//
//  Savings/Investment balance
//

SAVI = INVT*exp(PRII-PRID) + CURR/exp(REXN) + DEFI  ;
SAVN = INVT*exp(PRII-PRID) + CURN + DEFN  ;
SAVT = INVT*exp(PRII-PRID) + CURN        ;

//
// Aggregate deflated trade flows
//

TBAL = EXQT-IMQT ;

//
//  TBAU: trade balance in US$
//

TBAU = (EXQT-IMQT)*exp(REXN) ;

//  EMIS: carbon emissions
//

//EMIS = 1000*sum( goods, carcoef*OUY )
//     - 1000*sum( goods_o, carcoef(goods_o)*EXQ(goods_o) );

//EMIT = EMIS - EMIX;
//

//  ENER: energy consumption
//

//ENER = 1000*sum( goods, btucoef*OUY )
//     - 1000*sum( goods_o, btucoef(goods_o)*EXQ(goods_o) ) ;

//
//  EMCO: CO2 emissions
//

//EMCO = EMIS*44/12 ;

//
//  EMIS: aggregate emissions
//
//EMISZX = sum(  AnnexB, EMIX);

//EMISZ = sum( AnnexB, EMIS);

//EMISW = sum( regions, EMIS );



//
//  ENER: aggregate energy
//
//=== ENERWWNC=ENERUUNC+
//===          ENERDDNC+
//===          ENERNNNC;
//
//=== ENERZZNC=ENERUUNC;
//

//ENERZ = sum( AnnexB, ENER);
//ENERW = sum( regions, ENER );

//
//  EMCO: aggregate CO2 emissions
//
//
//=== EMCOWWNC=EMISWWNC*44/12;
//=== EMCOZZNC=EMISZZNC*44/12;
//

//EMCOW = EMISW*44/12;
//EMCOZ = EMISZ*44/12;

//
//  EXCH: US$ per unit of country c's currency
//

EXCH(notUS) = REXN(notUS) - PRID(notUS) + PRID(UU) ;

lead(EXCL) = EXCH;


//
//  REXC
//

lead(REXC) = REXC - INTR + INTR(UU) + EXCR ;



//capcon:   REXB = (1/(1+alph_rex))*REXL + (alph_rex/(1+alph_rex))*REXC;

REXN = REXC ;

//capcon:   lead(REXL) = REXB ;
// REXB = REXL ;

// capcon : 	REXN = REXB ;

last: INTR(notUS) = INTR(UU) + EXCR(notUS) {miss} ;

//
// NEER: Nominal effective exchange rate
//    Trade-weighted exch rate per unit of home currency
//
// REER: Real effective exchange rate
//    Trade-weighted real exch rate per unit of home currency
//

NEER(dest) = - sum(orig, eer_weight*(EXCH(orig)#dest-EXCH(dest)) );
REER(dest) = - sum(orig, eer_weight*(REXN(orig)#dest-REXN(dest)) );

//==========================================================================
//
//  Asset variables and accounting
//
//==========================================================================
//
// Evolution of net asset holdings by region in each currency
//
//    ashr*ABUY        = region's purchases of foreign assets
//    aeye*(CURR-ABUY) = buybacks of assets in own currency
//

ABUY = sum( abroad, ainv*CURR(abroad) );

lead(ASSE) = ASSE*( 1-labgrow(owner) )
           + ( ashr*ABUY + aeye*(CURR(owner)-ABUY) ) / exp(REXN(currency)) ;

last: ASSE = ( ashr*ABUY/labgrow(owner) + aeye*(CURR(owner)-ABUY)/labgrow(owner) )
           / exp(REXN(currency)) {miss} ;

ASSU = sum( currency, exp(REXN(currency))*ASSE ) ;

